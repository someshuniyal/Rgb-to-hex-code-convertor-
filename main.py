"""This python program is for making gui based RGB to hex code converter"""
from tkinter import *   #this is importing the tkinter pakage into the program
from tkinter import font #this is to import font module of tkinter into the programme
import convertor
operation="bg"          #this is a control variable contorling the operation of the software

class gui(convertor.convertion):
    """this class is making a gui for the application"""

    def __init__(self,root):
        root.columnconfigure(0,weight=1)
        root.rowconfigure(0,weight=1)
        self.f=Frame(root,bg="#424949")
        self.f.grid(row=0,column=0,sticky=N+W+S+E)

        self.create_label()
        self.create_scale()
        self.create_buttons()

        self.text_red=255          #this is use to set the scale and label according to the operation bing performed
        self.text_green=255
        self.text_blue=255
        self.bg_red=0
        self.bg_green=0
        self.bg_blue=0

    def create_label(self):
        """This method is to add label widgets to frame widget"""
        self.color_shower=Label(self.f,text="TEXT",bg="#000000",fg="#FFFFFF",font=fnt1,bd=3,relief=RIDGE,anchor=CENTER)   ####this label is use to display the color on the screen
        self.color_shower.place(x=50,y=25,width=400,height=250)
        self.rgb_label=Label(self.f,textvariable=rgb_string_var,font=fnt2,anchor=W,bg="#424949",fg="white")           ####this is to display rgb value for the color displayed on the screen
        self.rgb_label.place(x=500,y=25,width=250,height=50)
        self.hex_label=Label(self.f,text="HEX(#FFFFFF)",textvariable=hex_string_var,font=fnt2,anchor=W,bg="#424949",fg="white")       ####this label is use to display the hex value for the color displayed on the screen
        self.hex_label.place(x=500,y=125,width=250,height=50)

        self.red_label=Label(self.f,text="Red",bg="#424949",font=fnt2,fg="white",anchor=CENTER)
        self.red_label.place(x=0,y=325,width=100,height=75,anchor=NW)
        self.green_label=Label(self.f,text="Green",bg="#424949",font=fnt2,fg="white",anchor=CENTER)
        self.green_label.place(x=0,y=425,width=100,height=75,anchor=NW)
        self.blue_label=Label(self.f,text="Blue",bg="#424949",font=fnt2,fg="white",anchor=CENTER)
        self.blue_label.place(x=0,y=525,width=100,height=75,anchor=NW)

    def create_scale(self):
        """This method is to add scale widgets to the frame widget"""
        self.red_scale=Scale(self.f,font=fnt2,orient=HORIZONTAL,bg="#424949",fg="white",activebackground="#95a5a6",highlightthickness=0,troughcolor="#ec7063",from_=0,to=255,resolution=1,variable=red_var,command=self.scale_click)
        self.red_scale.place(x=100,y=325,width=600,height=75)
        self.green_scale=Scale(self.f,font=fnt2,orient=HORIZONTAL,bg="#424949",fg="white",activebackground="#95a5a6",highlightthickness=0,troughcolor="#58d68d",from_=0,to=255,resolution=1,variable=green_var,command=self.scale_click)
        self.green_scale.place(x=100,y=425,width=600,height=75)
        self.blue_scale=Scale(self.f,font=fnt2,orient=HORIZONTAL,bg="#424949",fg="white",activebackground="#95a5a6",highlightthickness=0,troughcolor="#3498db",from_=0,to=255,resolution=1,variable=blue_var,command=self.scale_click)
        self.blue_scale.place(x=100,y=525,width=600,height=75)

    def create_buttons(self):
        """This method is to add button widgets to the frame widget"""
        self.text_button=Button(self.f,font=fnt2,text="Text",bg="#e67e22",fg="white",command=lambda :self.button_click("text"))
        self.text_button.place(x=125,y=625,width=125,height=50)
        self.bg_button=Button(self.f,font=fnt2,text="B.G",bg="#e67e22",fg="white",command=lambda :self.button_click("bg"))
        self.bg_button.place(x=325,y=625,width=125,height=50)
        self.exit_button=Button(self.f,font=fnt2,text="Exit",command=exit,bg="red",fg="white")
        self.exit_button.place(x=525,y=625,width=125,height=50)

    def button_click(self,button_id):
        """this funtion handle the event generated by the buttons"""
        global operation
        if button_id=="text":
            red_var.set(self.text_red)
            green_var.set(self.text_green)
            blue_var.set(self.text_blue)
            rgb_string_var.set("RGB({},{},{})".format(self.text_red,self.text_green,self.text_blue))     #this is to change the rgb label according to the button click
            hex_string_var.set("HEX("+self.convertor(self.text_red,self.text_green,self.text_blue)+")")                #this os to change the hex label according to the button click
            operation="text"
        elif button_id=="bg":
            red_var.set(self.bg_red)
            green_var.set(self.bg_green)
            blue_var.set(self.bg_blue)
            rgb_string_var.set("RGB({},{},{})".format(self.bg_red,self.bg_green,self.bg_blue))     #this is to change the rgb label according to the button click
            hex_string_var.set("HEX("+self.convertor(self.bg_red,self.bg_green,self.bg_blue)+")")                #this os to change the hex label according to the button click
            operation="bg"

    def scale_click(self,value):
        """this method is use to handle the event generated by scale widgets"""
        global operation
        if operation=="bg":
            self.bg_red=red_var.get()
            self.bg_green=green_var.get()
            self.bg_blue=blue_var.get()
            rgb_string_var.set("RGB({},{},{})".format(self.bg_red,self.bg_green,self.bg_blue))     #this is to change the rgb label according to the scale
            hex_string_var.set("HEX("+self.convertor(self.bg_red,self.bg_green,self.bg_blue)+")")                #this os to change the hex label according to the scale
            self.color_shower["bg"]=self.convertor(self.bg_red,self.bg_green,self.bg_blue)    #this line is to change the background of the color_shower
        elif operation=="text":
            self.text_red=red_var.get()
            self.text_green=green_var.get()
            self.text_blue=blue_var.get()
            rgb_string_var.set("RGB({},{},{})".format(self.text_red,self.text_green,self.text_blue))     #this is to change the rgb label according to the scale
            hex_string_var.set("HEX("+self.convertor(self.text_red,self.text_green,self.text_blue)+")")                #this os to change the hex label according to the scale
            self.color_shower["fg"]=self.convertor(self.text_red,self.text_green,self.text_blue)


root=Tk()        ####this object is use to create root window for the application

root.geometry("800x700+100+100")
root.title("Color Converter")
root.resizable(width=False,height=False)
fnt1=font.Font(family="Times",size=-75,weight="bold")   ####THIS FONT object is use by the label which display the colors on the frame widgets
fnt2=font.Font(family="Times",size=-25,weight="bold")   ####this font is use by the all other widgets present in application
red_var=IntVar()        #variable for holding red color value
green_var=IntVar()      #variable for hollding green color value
blue_var=IntVar()       #variable for holding blue color value
rgb_string_var=StringVar()   ####tkinter variable for the label which display the rgb value on the frame
rgb_string_var.set("RGB(0,0,0)")
hex_string_var=StringVar()           ####tkinter variable for the label which display the hex value on the frame
hex_string_var.set("HEX(#000000)")
obj=gui(root)

root.mainloop()            ####this is a loop wich is use to monitor the events on the application
